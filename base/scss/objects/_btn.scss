/*------------------------------------*\
    #BUTTONS
\*------------------------------------*/

/**
 * A simple button object.
 */

// Predefine the variables below in order to alter and enable specific features.
$btn-padding:         		8px                 !default;
$btn-background:      		#222222             !default;
$btn-hover-background:    #000000             !default;
$btn-color:           		#FFFFFF             !default;

$btn-border-width:    		0 					        !default;
$btn-border-style:    		solid               !default;
$btn-border-color:    		#222222             !default;
$btn-border-radius:    		0                   !default;

$btn-transition: 			    all .3s cubic-bezier(.18, .61, .43, .99) !default;

/**
 * 1. Allow us to style box model properties.
 * 2. Line different sized buttons up a little nicer.
 * 3. Make buttons inherit font styles (often necessary when styling `input`s as
 *    buttons).
 * 4. Reset/normalize some styles.
 * 5. Force all button-styled elements to appear clickable.
 */

@mixin btn-reset {
	border: 0;
  padding: 0;
	background: none;
	appearance: none;
}

@mixin button {
	display: inline-block; /* [1] */
	vertical-align: middle; /* [2] */
	//font: inherit; /* [3] */
	text-align: center; /* [4] */
	margin: 0; /* [4] */
	cursor: pointer; /* [5] */
}

@mixin btn {
	@include button;

	padding: 0.75em 1.75em;
	border: $btn-border-width $btn-border-style $btn-border-color;
  border-radius: $btn-border-radius;

	color: $btn-color;
	background-color: $btn-background;

	box-shadow: none;
	-webkit-font-smoothing: initial;

	transition: $btn-transition;
	transition-property: color, background-color, opacity;

	&, body & {
		text-decoration: none;
	}

	&:hover,
	&:active,
	&:focus {
		color: $btn-color;
		background-color: $btn-hover-background;
		opacity: .8;
		text-decoration: none;
		border: initial;
	}
}

@mixin btn-directional {
	position: relative;

	&:before,
	&:after {
		color: inherit;
		margin-top: -1px;
		transition: $btn-transition;
		transition-property: transform;
	}

	&:after {
		transform: translate(0, calc(0.5px - 50%));
	}

	&:hover {

		&:before {
			transform: translate(0, 0);
		}

		&:after {
			transform: translate(0, -50%);
		}
	}

	// The stick
	&:before {
		content: "";

		position: absolute;
		top: 50%;

		@include spacing(width, 37px);
		height: 1px;

		background-color: currentColor;
	}

	// The arrow
	&:after {
		content: "";

		position: absolute;
		top: 50%;

		display: block;
		width: 0;
		height: 0;

		border-top: 5px solid transparent;
		border-bottom: 5px solid transparent;
	}
}

@mixin directional--left {
	@include spacing(padding-left, 55px);

	&:before {
		left: 5px;
	}

	&:after {
		left: 0;
		border-right: 5px solid currentColor;
	}
}

@mixin btn-directional--left {
	@include spacing(padding-left, 100px);

	&:before {
		@include spacing(left, 35px);
	}

	&:after {
		@include spacing(left, 30px);
		border-right: 5px solid currentColor;
	}
}

@mixin directional--right {
	@include spacing(padding-right, 55px);

	&:before {
		right: 5px;
	}

	&:after {
		right: 0;
		border-left: 5px solid currentColor;
	}
}

@mixin btn-directional--right {
	padding-right: 6.5em;
	text-align: left;

	&:before {
		right: (7em/3);
	}

	&:after {
		right: calc(#{7em/3} - 5px);
		border-left: 5px solid currentColor;
	}
}

.c-btn {
	@include btn;
}

.c-btn-directional {
	@include btn-directional;
}

.c-button-text {
	@include btn-reset;
	padding: 0;
}

.c-btn-directional--left {
	@include btn-directional--left;
}

.c-btn-directional--right {
	@include btn-directional--right;
}



// Helper Classes for Humans & Nature
// <a class="button">		Regular Button 		</a>
// <a class="button arrow">	Button with Arrow 	</a>

.entry-content a {
	&.button {
		@include btn;

		&.arrow {
			@include btn-directional;
			@include btn-directional--right;
		}
	}
}

.c-btn--reset {
  @include btn-reset;
}
